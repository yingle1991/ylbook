{"title":"博客支持 mermaid","slug":"2021-12-17-work-Blog","date":"2021-12-16T16:00:00.000Z","updated":"2021-12-17T04:34:33.365Z","comments":true,"path":"api/articles/2021-12-17-work-Blog.json","excerpt":"安装插件<br>npm install hexo-filter-mermaid-diagrams<br>修改配置文件<br>在hexo的_config.yml文件（根目录的并非主题的）中，添加以下内容：","covers":["https://gitee.com/yingle1991/resource/raw/master/static/blog/passme.png"],"content":"<p>安装插件<br>npm install hexo-filter-mermaid-diagrams<br>修改配置文件<br>在hexo的_config.yml文件（根目录的并非主题的）中，添加以下内容：</p>\n<a id=\"more\"></a> \n\n<figure class=\"highlight plain\"><figcaption><span>mermaid chart</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mermaid: ## mermaid url https:&#x2F;&#x2F;github.com&#x2F;knsv&#x2F;mermaid</span><br><span class=\"line\">  enable: true  # default true</span><br><span class=\"line\">  version: &quot;7.1.2&quot; # default v7.1.2</span><br><span class=\"line\">  options:  # find more api options from https:&#x2F;&#x2F;github.com&#x2F;knsv&#x2F;mermaid&#x2F;blob&#x2F;master&#x2F;src&#x2F;mermaidAPI.js</span><br><span class=\"line\">    #startOnload: true  &#x2F;&#x2F; default true</span><br></pre></td></tr></table></figure>\n<p>js文件修改</p>\n<ol>\n<li>修改位置 （next主题为例）</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">themes&#x2F;next&#x2F;layout&#x2F;_partials&#x2F;footer.swig</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>根据footer的格式不同，添加的内容不同。<br>格式有after_footer.pug , after-footer.ejs ,footer.swig等。<br>以下是在next的footer.swig添加的内容。其他格式参考github: hexo-filter-mermaid-diagrams</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if theme.mermaid.enable %&#125;</span><br><span class=\"line\">  &lt;script src&#x3D;&#39;https:&#x2F;&#x2F;unpkg.com&#x2F;mermaid@&#123;&#123; theme.mermaid.version &#125;&#125;&#x2F;dist&#x2F;mermaid.min.js&#39;&gt;&lt;&#x2F;script&gt;</span><br><span class=\"line\">  &lt;script&gt;</span><br><span class=\"line\">    if (window.mermaid) &#123;</span><br><span class=\"line\">      mermaid.initialize(&#123;&#123; JSON.stringify(theme.mermaid.options) &#125;&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &lt;&#x2F;script&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<p>到此为止，设置的部分就结束了。</p>\n<ol>\n<li>UML类图</li>\n</ol>\n<pre class=\"mermaid\">classDiagram\n      Animal <|-- Duck\n      Animal <|-- Fish\n      Animal <|-- Zebra\n      Animal : +int age\n      Animal : +String gender\n      Animal: +isMammal()\n      Animal: +mate()\n      class Duck{\n          +String beakColor\n          +swim()\n          +quack()\n      }\n      class Fish{\n          -int sizeInFeet\n          -canEat()\n      }\n      class Zebra{\n          +bool is_wild\n          +run()\n      }</pre>\n\n<ol start=\"2\">\n<li>UML 甘特图</li>\n</ol>\n<pre class=\"mermaid\">gantt\n    title 工作计划\n    dateFormat  YYYY-MM-DD\n    section Section\n    A task           :a1, 2020-01-01, 30d\n    Another task     :after a1  , 20d\n    section Another\n    Task in sec      :2020-01-12  , 12d\n    another task      : 24d</pre>\n\n<ol start=\"3\">\n<li><p>时序图</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 代表实线 ， 主动发送消息，比如 request请求</span><br><span class=\"line\">&gt; 代表实心箭头 ， 同步消息，比如 AJAX 的同步请求</span><br><span class=\"line\">-- 代表虚线，表示返回消息，spring Controller return</span><br><span class=\"line\">&gt;&gt; 代表非实心箭头 ，异步消息，比如AJAX请求</span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ol>\n<pre class=\"mermaid\">sequenceDiagram\n    Title: md时序图练习\n\n    participant 客户端\n    participant 控制器\n    participant 业务\n    participant 数据库\n\n     客户端->>数据库:提交数据店铺\n     Note right of 客户端:提交数据进行验证\n     控制器->>控制器:验证数据完整性\n     Note left of 控制器:返回错误的字段信息\n     控制器-->>客户端:数据不完整\n     Note over 客户端: 用户输入通行证的账号、密码\n     控制器->>业务:保存店铺到数据库\n     业务->>业务:save店铺数据\n     业务-->>控制器:保存出现异常\n     控制器-->>客户端:保存成功\n     数据库-->>业务:success\n     业务-->>控制器:success\n     控制器-->>客户端:success 客户端\n     Note left of 控制器:返回正确的提示，并跳转到审核第二步</pre>\n\n\n\n\n\n\n\n<p>分享程序员的理财、生活！我是乐子，多多指教！</p>\n<pre><code>                                                - EOF -</code></pre>\n<p>   <img src=\"https://gitee.com/yingle1991/resource/raw/master/static/blog/passme.png\" alt=\"关注我得到更多信息\"></p>\n","more":"<figure class=\"highlight plain\"><figcaption><span>mermaid chart</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mermaid: ## mermaid url https:&#x2F;&#x2F;github.com&#x2F;knsv&#x2F;mermaid</span><br><span class=\"line\">  enable: true  # default true</span><br><span class=\"line\">  version: &quot;7.1.2&quot; # default v7.1.2</span><br><span class=\"line\">  options:  # find more api options from https:&#x2F;&#x2F;github.com&#x2F;knsv&#x2F;mermaid&#x2F;blob&#x2F;master&#x2F;src&#x2F;mermaidAPI.js</span><br><span class=\"line\">    #startOnload: true  &#x2F;&#x2F; default true</span><br></pre></td></tr></table></figure>\n<p>js文件修改</p>\n<ol>\n<li>修改位置 （next主题为例）</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">themes&#x2F;next&#x2F;layout&#x2F;_partials&#x2F;footer.swig</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>根据footer的格式不同，添加的内容不同。<br>格式有after_footer.pug , after-footer.ejs ,footer.swig等。<br>以下是在next的footer.swig添加的内容。其他格式参考github: hexo-filter-mermaid-diagrams</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if theme.mermaid.enable %&#125;</span><br><span class=\"line\">  &lt;script src&#x3D;&#39;https:&#x2F;&#x2F;unpkg.com&#x2F;mermaid@&#123;&#123; theme.mermaid.version &#125;&#125;&#x2F;dist&#x2F;mermaid.min.js&#39;&gt;&lt;&#x2F;script&gt;</span><br><span class=\"line\">  &lt;script&gt;</span><br><span class=\"line\">    if (window.mermaid) &#123;</span><br><span class=\"line\">      mermaid.initialize(&#123;&#123; JSON.stringify(theme.mermaid.options) &#125;&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &lt;&#x2F;script&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<p>到此为止，设置的部分就结束了。</p>\n<ol>\n<li>UML类图</li>\n</ol>\n<pre class=\"mermaid\">classDiagram\n      Animal <|-- Duck\n      Animal <|-- Fish\n      Animal <|-- Zebra\n      Animal : +int age\n      Animal : +String gender\n      Animal: +isMammal()\n      Animal: +mate()\n      class Duck{\n          +String beakColor\n          +swim()\n          +quack()\n      }\n      class Fish{\n          -int sizeInFeet\n          -canEat()\n      }\n      class Zebra{\n          +bool is_wild\n          +run()\n      }</pre>\n\n<ol start=\"2\">\n<li>UML 甘特图</li>\n</ol>\n<pre class=\"mermaid\">gantt\n    title 工作计划\n    dateFormat  YYYY-MM-DD\n    section Section\n    A task           :a1, 2020-01-01, 30d\n    Another task     :after a1  , 20d\n    section Another\n    Task in sec      :2020-01-12  , 12d\n    another task      : 24d</pre>\n\n<ol start=\"3\">\n<li><p>时序图</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 代表实线 ， 主动发送消息，比如 request请求</span><br><span class=\"line\">&gt; 代表实心箭头 ， 同步消息，比如 AJAX 的同步请求</span><br><span class=\"line\">-- 代表虚线，表示返回消息，spring Controller return</span><br><span class=\"line\">&gt;&gt; 代表非实心箭头 ，异步消息，比如AJAX请求</span><br></pre></td></tr></table></figure>\n\n\n\n</li>\n</ol>\n<pre class=\"mermaid\">sequenceDiagram\n    Title: md时序图练习\n\n    participant 客户端\n    participant 控制器\n    participant 业务\n    participant 数据库\n\n     客户端->>数据库:提交数据店铺\n     Note right of 客户端:提交数据进行验证\n     控制器->>控制器:验证数据完整性\n     Note left of 控制器:返回错误的字段信息\n     控制器-->>客户端:数据不完整\n     Note over 客户端: 用户输入通行证的账号、密码\n     控制器->>业务:保存店铺到数据库\n     业务->>业务:save店铺数据\n     业务-->>控制器:保存出现异常\n     控制器-->>客户端:保存成功\n     数据库-->>业务:success\n     业务-->>控制器:success\n     控制器-->>客户端:success 客户端\n     Note left of 控制器:返回正确的提示，并跳转到审核第二步</pre>\n\n\n\n\n\n\n\n<p>分享程序员的理财、生活！我是乐子，多多指教！</p>\n<pre><code>                                                - EOF -</code></pre>\n<p>   <img src=\"https://gitee.com/yingle1991/resource/raw/master/static/blog/passme.png\" alt=\"关注我得到更多信息\"></p>","categories":[],"tags":[{"name":"mysql","path":"api/tags/mysql.json"},{"name":"开源","path":"api/tags/开源.json"}]}