{"title":"SAP调用外部接口","slug":"2019-07-10-work-Blog","date":"2019-07-10T16:00:00.000Z","updated":"2021-11-07T14:17:36.818Z","comments":true,"path":"api/articles/2019-07-10-work-Blog.json","excerpt":null,"covers":null,"content":"<p>###SAP调用外部接口遇到的坑</p>\n<p>开始</p>\n<ol>\n<li><p>SE80，创建web service proxy</p>\n<p>1）SE80，选择package，右击-&gt;create-&gt;Enterprise service</p>\n<ol start=\"2\">\n<li>Object Type, 选择Service Consumer，继续<br>3）Select source，选择URL/HTTP Destination，继续<br>4）URL中输入网址，继续<br>5）分配package和前缀(随意)，完成<br>6）保存，激活</li>\n</ol>\n</li>\n<li><p>LPCONFIG，创建逻辑端口</p>\n<p>1）输入proxy class(第1步中生成的proxy name)和logical port(随意，通常同proxy class)，选中Default port<br>2）输入描述，选中message id 和 state management<br>3）调用参数：URL输入去掉?WSDL的地址<br>4）操作：右侧SOAP操作，输入xml文件中soapAction等号后的内容，包括引号</p>\n</li>\n<li><p>程序调用web service<br>例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DATA:</span><br><span class=\"line\">        lo_clientproxy      TYPE REF TO z_proxy. &quot;proxy class</span><br><span class=\"line\">     DATA:</span><br><span class=\"line\">        lo_input           TYPE z_input,      &quot;输入参数</span><br><span class=\"line\">        lo_output          TYPE z_output.     &quot;输出参数</span><br><span class=\"line\"></span><br><span class=\"line\">  lo_request &#x3D;  request.</span><br><span class=\"line\"></span><br><span class=\"line\">  CREATE OBJECT lo_clientproxy.</span><br><span class=\"line\">  TRY.</span><br><span class=\"line\">      CALL METHOD lo_clientproxy-&gt;z_method &quot;web service函数</span><br><span class=\"line\">        EXPORTING</span><br><span class=\"line\">          to_input  &#x3D; lo_input</span><br><span class=\"line\">        IMPORTING</span><br><span class=\"line\">          to_output &#x3D; lo_output.</span><br><span class=\"line\"></span><br><span class=\"line\">- ***Write Out the Basic Information</span><br><span class=\"line\">  CATCH cx_ai_system_fault INTO g_sys_exception.&quot;捕获错误</span><br><span class=\"line\">    IF g_sys_exception IS NOT INITIAL.</span><br><span class=\"line\">      WRITE: &#39;Error:Communication Error&#39;.</span><br><span class=\"line\">    ENDIF.</span><br><span class=\"line\">  CATCH cx_ai_application_fault INTO g_app_exception.</span><br><span class=\"line\">    IF g_app_exception IS NOT INITIAL.</span><br><span class=\"line\">      WRITE &#39;Error:Application Error&#39;.</span><br><span class=\"line\">    ENDIF.</span><br><span class=\"line\">  ENDTRY.</span><br></pre></td></tr></table></figure>\n<p>测试问题一：<br>第一步时，遇到问题HTTP 404问题，但是链接直接可以浏览器打开<br>解决方案：</p>\n</li>\n<li><p>将网址链接(JAVA发布的web service通常以?wsdl结尾)，另存到本地，保存为xml文件</p>\n</li>\n<li><p>修改xml文件，删除下面内容，删除后保存</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;wsdl:binding ……&gt;    ……  &lt;&#x2F;wsdl:binding&gt;</span><br><span class=\"line\">&lt;wsdl:port …….&gt;    …….&lt;&#x2F;wsdl:port&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>SE80创建web service proxy时，就Select source，选择Local file，其他都一样<br>刚看一个链接里有介绍：<a href=\"http://hi.baidu.com/tktik/item/fcaf0e53e26cbe3a32e0a951\">http://hi.baidu.com/tktik/item/fcaf0e53e26cbe3a32e0a951</a></p>\n</li>\n</ol>\n<p>测试问题二：<br>连接总是不同，一直有cx_ai_system_fault异常<br>解决方案：<br>    将逻辑端口中的域名改为ip地址</p>\n<p>对于这个问题可以打印输出一把错误excption</p>\n<pre><code> CATCH CX_AI_SYSTEM_FAULT INTO exref.\n  zflag = exref-&gt;GET_TEXT( ).</code></pre>\n<p>值得注意的是，实现该功能，不需要创建RFC连接</p>\n<p>纯属开发笔记，有啥补充尽可联系我~<br><a href=\"mailto:&#x79;&#105;&#x6e;&#103;&#108;&#x65;&#49;&#x39;&#57;&#x31;&#x40;&#x31;&#x36;&#51;&#x2e;&#99;&#x6f;&#109;\">&#x79;&#105;&#x6e;&#103;&#108;&#x65;&#49;&#x39;&#57;&#x31;&#x40;&#x31;&#x36;&#51;&#x2e;&#99;&#x6f;&#109;</a></p>\n","more":"<p>###SAP调用外部接口遇到的坑</p>\n<p>开始</p>\n<ol>\n<li><p>SE80，创建web service proxy</p>\n<p>1）SE80，选择package，右击-&gt;create-&gt;Enterprise service</p>\n<ol start=\"2\">\n<li>Object Type, 选择Service Consumer，继续<br>3）Select source，选择URL/HTTP Destination，继续<br>4）URL中输入网址，继续<br>5）分配package和前缀(随意)，完成<br>6）保存，激活</li>\n</ol>\n</li>\n<li><p>LPCONFIG，创建逻辑端口</p>\n<p>1）输入proxy class(第1步中生成的proxy name)和logical port(随意，通常同proxy class)，选中Default port<br>2）输入描述，选中message id 和 state management<br>3）调用参数：URL输入去掉?WSDL的地址<br>4）操作：右侧SOAP操作，输入xml文件中soapAction等号后的内容，包括引号</p>\n</li>\n<li><p>程序调用web service<br>例子：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DATA:</span><br><span class=\"line\">        lo_clientproxy      TYPE REF TO z_proxy. &quot;proxy class</span><br><span class=\"line\">     DATA:</span><br><span class=\"line\">        lo_input           TYPE z_input,      &quot;输入参数</span><br><span class=\"line\">        lo_output          TYPE z_output.     &quot;输出参数</span><br><span class=\"line\"></span><br><span class=\"line\">  lo_request &#x3D;  request.</span><br><span class=\"line\"></span><br><span class=\"line\">  CREATE OBJECT lo_clientproxy.</span><br><span class=\"line\">  TRY.</span><br><span class=\"line\">      CALL METHOD lo_clientproxy-&gt;z_method &quot;web service函数</span><br><span class=\"line\">        EXPORTING</span><br><span class=\"line\">          to_input  &#x3D; lo_input</span><br><span class=\"line\">        IMPORTING</span><br><span class=\"line\">          to_output &#x3D; lo_output.</span><br><span class=\"line\"></span><br><span class=\"line\">- ***Write Out the Basic Information</span><br><span class=\"line\">  CATCH cx_ai_system_fault INTO g_sys_exception.&quot;捕获错误</span><br><span class=\"line\">    IF g_sys_exception IS NOT INITIAL.</span><br><span class=\"line\">      WRITE: &#39;Error:Communication Error&#39;.</span><br><span class=\"line\">    ENDIF.</span><br><span class=\"line\">  CATCH cx_ai_application_fault INTO g_app_exception.</span><br><span class=\"line\">    IF g_app_exception IS NOT INITIAL.</span><br><span class=\"line\">      WRITE &#39;Error:Application Error&#39;.</span><br><span class=\"line\">    ENDIF.</span><br><span class=\"line\">  ENDTRY.</span><br></pre></td></tr></table></figure>\n<p>测试问题一：<br>第一步时，遇到问题HTTP 404问题，但是链接直接可以浏览器打开<br>解决方案：</p>\n</li>\n<li><p>将网址链接(JAVA发布的web service通常以?wsdl结尾)，另存到本地，保存为xml文件</p>\n</li>\n<li><p>修改xml文件，删除下面内容，删除后保存</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;wsdl:binding ……&gt;    ……  &lt;&#x2F;wsdl:binding&gt;</span><br><span class=\"line\">&lt;wsdl:port …….&gt;    …….&lt;&#x2F;wsdl:port&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>SE80创建web service proxy时，就Select source，选择Local file，其他都一样<br>刚看一个链接里有介绍：<a href=\"http://hi.baidu.com/tktik/item/fcaf0e53e26cbe3a32e0a951\">http://hi.baidu.com/tktik/item/fcaf0e53e26cbe3a32e0a951</a></p>\n</li>\n</ol>\n<p>测试问题二：<br>连接总是不同，一直有cx_ai_system_fault异常<br>解决方案：<br>    将逻辑端口中的域名改为ip地址</p>\n<p>对于这个问题可以打印输出一把错误excption</p>\n<pre><code> CATCH CX_AI_SYSTEM_FAULT INTO exref.\n  zflag = exref-&gt;GET_TEXT( ).</code></pre>\n<p>值得注意的是，实现该功能，不需要创建RFC连接</p>\n<p>纯属开发笔记，有啥补充尽可联系我~<br><a href=\"mailto:&#x79;&#105;&#x6e;&#103;&#108;&#x65;&#49;&#x39;&#57;&#x31;&#x40;&#x31;&#x36;&#51;&#x2e;&#99;&#x6f;&#109;\">&#x79;&#105;&#x6e;&#103;&#108;&#x65;&#49;&#x39;&#57;&#x31;&#x40;&#x31;&#x36;&#51;&#x2e;&#99;&#x6f;&#109;</a></p>\n","categories":[],"tags":[{"name":"笔记","path":"api/tags/笔记.json"},{"name":"SAP","path":"api/tags/SAP.json"}]}