{"title":"Git出现代码冲突怎么办？","slug":"2019-07-13-git-Blog","date":"2019-07-12T16:00:00.000Z","updated":"2021-11-07T14:17:36.818Z","comments":true,"path":"api/articles/2019-07-13-git-Blog.json","excerpt":null,"covers":["https://i.imgur.com/LbSqfQr.png","https://i.imgur.com/F4QyRf0.png","https://i.imgur.com/Zdl1etu.png"],"content":"<p>我们在同步代码通常会先git pull，git pull时很频繁的遇到冲突的时候，如下面提示</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">error: Your local changes to the following files would be overwritten by merge:</span><br><span class=\"line\">    jiddpb-admin&#x2F;src&#x2F;main&#x2F;java&#x2F;io&#x2F;terminus&#x2F;jiddpb&#x2F;admin&#x2F;report&#x2F;JiddPBReports.java</span><br><span class=\"line\">    jiddpb-bid&#x2F;src&#x2F;main&#x2F;java&#x2F;io&#x2F;terminus&#x2F;jiddpb&#x2F;bid&#x2F;service&#x2F;JiddpbReportServiceImpl.java</span><br><span class=\"line\">Please commit your changes or stash them before you merge.</span><br></pre></td></tr></table></figure>\n\n<p>这个意思就是说服务器上的代码与本地修改内容有冲突，先提交你的改变或者储存起来你的改变.</p>\n<p>处理的方式很简单，跟提示走永远不愁，主要使用git 储存命令进行处理，步骤如下：</p>\n<p>##1. 先将本地修改使用git stash 命令储存起来<br>    git stash</p>\n<p>这样本地修改就被git 储存起来了，使用 git stash list 即可查到保存信息：</p>\n<p><img src=\"https://i.imgur.com/LbSqfQr.png\"></p>\n<p>其中 stash@{0} 就是刚才储存的标记</p>\n<p>##2. pull服务器内容</p>\n<p>存储了本地变动就可以pull服务器代码了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n\n<p>##3. 还原暂存代码<br>    git stash pop<br>系统提示一下信息<br><img src=\"https://i.imgur.com/F4QyRf0.png\"><br>意思就是系统自动合并修改的内容，但是其中有冲突，需要解决其中的冲突。</p>\n<p>##4、解决文件中冲突的的部分</p>\n<p>打开冲突的文件，会看到类似如下的内容：</p>\n<p><img src=\"https://i.imgur.com/Zdl1etu.png\"></p>\n<p>git冲突内容</p>\n<p>其中Updated upstream 和=====之间的内容就是pull下来的内容，====和stashed changes之间的内容就是本地修改的内容。碰到这种情况，git也不知道哪行内容是需要的，所以要自行确定需要的内容。<br>解决完成之后，就可以正常的提交了。</p>\n<p>纯属开发笔记，有啥补充尽可联系我~<br><a href=\"mailto:&#121;&#105;&#110;&#103;&#108;&#x65;&#49;&#x39;&#x39;&#49;&#x40;&#x31;&#x36;&#x33;&#x2e;&#99;&#x6f;&#109;\">&#121;&#105;&#110;&#103;&#108;&#x65;&#49;&#x39;&#x39;&#49;&#x40;&#x31;&#x36;&#x33;&#x2e;&#99;&#x6f;&#109;</a></p>\n","more":"<p>我们在同步代码通常会先git pull，git pull时很频繁的遇到冲突的时候，如下面提示</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">error: Your local changes to the following files would be overwritten by merge:</span><br><span class=\"line\">    jiddpb-admin&#x2F;src&#x2F;main&#x2F;java&#x2F;io&#x2F;terminus&#x2F;jiddpb&#x2F;admin&#x2F;report&#x2F;JiddPBReports.java</span><br><span class=\"line\">    jiddpb-bid&#x2F;src&#x2F;main&#x2F;java&#x2F;io&#x2F;terminus&#x2F;jiddpb&#x2F;bid&#x2F;service&#x2F;JiddpbReportServiceImpl.java</span><br><span class=\"line\">Please commit your changes or stash them before you merge.</span><br></pre></td></tr></table></figure>\n\n<p>这个意思就是说服务器上的代码与本地修改内容有冲突，先提交你的改变或者储存起来你的改变.</p>\n<p>处理的方式很简单，跟提示走永远不愁，主要使用git 储存命令进行处理，步骤如下：</p>\n<p>##1. 先将本地修改使用git stash 命令储存起来<br>    git stash</p>\n<p>这样本地修改就被git 储存起来了，使用 git stash list 即可查到保存信息：</p>\n<p><img src=\"https://i.imgur.com/LbSqfQr.png\"></p>\n<p>其中 stash@{0} 就是刚才储存的标记</p>\n<p>##2. pull服务器内容</p>\n<p>存储了本地变动就可以pull服务器代码了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n\n<p>##3. 还原暂存代码<br>    git stash pop<br>系统提示一下信息<br><img src=\"https://i.imgur.com/F4QyRf0.png\"><br>意思就是系统自动合并修改的内容，但是其中有冲突，需要解决其中的冲突。</p>\n<p>##4、解决文件中冲突的的部分</p>\n<p>打开冲突的文件，会看到类似如下的内容：</p>\n<p><img src=\"https://i.imgur.com/Zdl1etu.png\"></p>\n<p>git冲突内容</p>\n<p>其中Updated upstream 和=====之间的内容就是pull下来的内容，====和stashed changes之间的内容就是本地修改的内容。碰到这种情况，git也不知道哪行内容是需要的，所以要自行确定需要的内容。<br>解决完成之后，就可以正常的提交了。</p>\n<p>纯属开发笔记，有啥补充尽可联系我~<br><a href=\"mailto:&#121;&#105;&#110;&#103;&#108;&#x65;&#49;&#x39;&#x39;&#49;&#x40;&#x31;&#x36;&#x33;&#x2e;&#99;&#x6f;&#109;\">&#121;&#105;&#110;&#103;&#108;&#x65;&#49;&#x39;&#x39;&#49;&#x40;&#x31;&#x36;&#x33;&#x2e;&#99;&#x6f;&#109;</a></p>\n","categories":[],"tags":[{"name":"git","path":"api/tags/git.json"},{"name":"随笔","path":"api/tags/随笔.json"},{"name":"协作开发","path":"api/tags/协作开发.json"}]}