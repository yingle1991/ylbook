{"title":"忆开发中的坏习惯","slug":"2017-09-29-git-Blog","date":"2017-09-28T16:00:00.000Z","updated":"2021-11-07T14:17:36.817Z","comments":true,"path":"api/articles/2017-09-29-git-Blog.json","excerpt":null,"covers":null,"content":"<p>昨天晚上项目更新上线，以我这大大咧咧的性格当然是比较繁琐、麻烦了，先总结出错的地方 以记录改正。</p>\n<hr>\n<p>项目开发周期无非涉及日常开发（前、后台部分）、数据库表结构、视图、函数的修改，测试环境部署branches -&gt;trunk 现在整理一下每个过程需要注意的地方</p>\n<p>日常开发部分：</p>\n<ol>\n<li>每天第一件事先从svn down 下最新代码包</li>\n<li>确定连接开发库，忌讳连接本地库以及正式库</li>\n<li>确定与项目组成员修改不同功能模块尤其前后台分离的项目</li>\n<li>记录修改了哪些前台模块 以备正式发布导出</li>\n</ol>\n<p>数据库表结构、视图、函数的修改</p>\n<ol>\n<li>表结构、视图的新建修改一定要记录！记录！记录（我吃了很大亏）</li>\n<li>对于函数尽可能的记录函数干嘛的，不要重复建立，尽可能的复用：这里我要多说一句统计函数尽可能独立建立，缩减查询列，对于大数据是很消耗资源的</li>\n<li>避免使用*</li>\n</ol>\n<p>测试环境部署branches</p>\n<ol>\n<li>前后台一定同步更新，改动少可以class 部署</li>\n<li>war 包部署，注意上传文件的保护</li>\n</ol>\n<p>发布准备</p>\n<ol>\n<li>每个程序员分别导出自己修改的几个wb模块；</li>\n<li>每个程序员记住自己的数据库修改内容，包括：修改的表字段、表、视图、函数、存储过程、序列、索引等；</li>\n<li>每个程序员记住自己的项目内容的修改，包括：可配置的键值内容的修改、新增功能授权给哪些人、工作流的配置修改等；</li>\n<li>如果涉及到批量更新数据，需要写好sql，在测试环境中测试通过。</li>\n</ol>\n<p>正式环境操作</p>\n<ol>\n<li>备份<br>①备份正式数据库<br>②导出现有的所有wb模块</li>\n<li>将svn的“开发分支”合并到“trunk主分支”上，注意相关数据库地址、微信地址等需要是正式地址；导出war包，或者导出编译后的增量变化的内容；</li>\n<li>发布之前，预估一下发布的时间，通知客户停止使用；</li>\n<li>进行内容发布<br>（1）java程序（如果服务器有多台，需要多台上都进行如下操作）<br>①备份正式服务器上tomcat下的项目目录；<br>②将增量变化的内容复制到测试服务器上tomcat下的项目目录中，覆盖已有的内容，重启tomcat（如果只修改jsp不需要重启）<br>如果导出的是war包，可将war包放到与项目目录同级的目录下，删除原有的项目目录【注意附件等内容】<br>（2）数据库内容<br>按照事前的整理，进行数据库内容的修改，包括批量更新数据<br>（3）wb模块<br>①按照事前的整理，进行多个wb模块的导入<br>②登录集成开发环境，进行模块更新（如果服务器有多台，需要多台上都进行如下操作）<br>（4）项目内容的修改<br>按照事前的整理，进行项目内容的修改</li>\n<li>发布后，进行测试；</li>\n<li>测试通过后，通知客户重新登录使用。</li>\n</ol>\n<p>纯属开发笔记，有啥补充尽可联系我~<br><a href=\"mailto:&#x79;&#105;&#110;&#103;&#108;&#x65;&#x31;&#x39;&#x39;&#49;&#x40;&#103;&#109;&#97;&#x69;&#108;&#46;&#x63;&#111;&#109;\">&#x79;&#105;&#110;&#103;&#108;&#x65;&#x31;&#x39;&#x39;&#49;&#x40;&#103;&#109;&#97;&#x69;&#108;&#46;&#x63;&#111;&#109;</a></p>\n","more":"<p>昨天晚上项目更新上线，以我这大大咧咧的性格当然是比较繁琐、麻烦了，先总结出错的地方 以记录改正。</p>\n<hr>\n<p>项目开发周期无非涉及日常开发（前、后台部分）、数据库表结构、视图、函数的修改，测试环境部署branches -&gt;trunk 现在整理一下每个过程需要注意的地方</p>\n<p>日常开发部分：</p>\n<ol>\n<li>每天第一件事先从svn down 下最新代码包</li>\n<li>确定连接开发库，忌讳连接本地库以及正式库</li>\n<li>确定与项目组成员修改不同功能模块尤其前后台分离的项目</li>\n<li>记录修改了哪些前台模块 以备正式发布导出</li>\n</ol>\n<p>数据库表结构、视图、函数的修改</p>\n<ol>\n<li>表结构、视图的新建修改一定要记录！记录！记录（我吃了很大亏）</li>\n<li>对于函数尽可能的记录函数干嘛的，不要重复建立，尽可能的复用：这里我要多说一句统计函数尽可能独立建立，缩减查询列，对于大数据是很消耗资源的</li>\n<li>避免使用*</li>\n</ol>\n<p>测试环境部署branches</p>\n<ol>\n<li>前后台一定同步更新，改动少可以class 部署</li>\n<li>war 包部署，注意上传文件的保护</li>\n</ol>\n<p>发布准备</p>\n<ol>\n<li>每个程序员分别导出自己修改的几个wb模块；</li>\n<li>每个程序员记住自己的数据库修改内容，包括：修改的表字段、表、视图、函数、存储过程、序列、索引等；</li>\n<li>每个程序员记住自己的项目内容的修改，包括：可配置的键值内容的修改、新增功能授权给哪些人、工作流的配置修改等；</li>\n<li>如果涉及到批量更新数据，需要写好sql，在测试环境中测试通过。</li>\n</ol>\n<p>正式环境操作</p>\n<ol>\n<li>备份<br>①备份正式数据库<br>②导出现有的所有wb模块</li>\n<li>将svn的“开发分支”合并到“trunk主分支”上，注意相关数据库地址、微信地址等需要是正式地址；导出war包，或者导出编译后的增量变化的内容；</li>\n<li>发布之前，预估一下发布的时间，通知客户停止使用；</li>\n<li>进行内容发布<br>（1）java程序（如果服务器有多台，需要多台上都进行如下操作）<br>①备份正式服务器上tomcat下的项目目录；<br>②将增量变化的内容复制到测试服务器上tomcat下的项目目录中，覆盖已有的内容，重启tomcat（如果只修改jsp不需要重启）<br>如果导出的是war包，可将war包放到与项目目录同级的目录下，删除原有的项目目录【注意附件等内容】<br>（2）数据库内容<br>按照事前的整理，进行数据库内容的修改，包括批量更新数据<br>（3）wb模块<br>①按照事前的整理，进行多个wb模块的导入<br>②登录集成开发环境，进行模块更新（如果服务器有多台，需要多台上都进行如下操作）<br>（4）项目内容的修改<br>按照事前的整理，进行项目内容的修改</li>\n<li>发布后，进行测试；</li>\n<li>测试通过后，通知客户重新登录使用。</li>\n</ol>\n<p>纯属开发笔记，有啥补充尽可联系我~<br><a href=\"mailto:&#x79;&#105;&#110;&#103;&#108;&#x65;&#x31;&#x39;&#x39;&#49;&#x40;&#103;&#109;&#97;&#x69;&#108;&#46;&#x63;&#111;&#109;\">&#x79;&#105;&#110;&#103;&#108;&#x65;&#x31;&#x39;&#x39;&#49;&#x40;&#103;&#109;&#97;&#x69;&#108;&#46;&#x63;&#111;&#109;</a></p>\n","categories":[],"tags":[{"name":"笔记","path":"api/tags/笔记.json"}]}