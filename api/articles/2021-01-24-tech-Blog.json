{"title":"阿里服务器安装docker 给小程序 部署 springboot 项目","slug":"2021-01-24-tech-Blog","date":"2021-01-23T16:00:00.000Z","updated":"2021-11-08T07:14:14.564Z","comments":true,"path":"api/articles/2021-01-24-tech-Blog.json","excerpt":"序随着小程序的普及，大部分开发者都会有租个阿里服务器为小程序提供接口，恰巧我也正在开发一个股票、新债的小程序，但小程序一般都有两个需求（外网访问、https访问）,接口必须上云，所以才有今天的学习记录~一、在你的linux系统中安装dockercurl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun剩下的就让机器自己运行就好了","covers":["https://gitee.com/yingle1991/resource/raw/master/static/blog/image-20210124111314359.png","https://gitee.com/yingle1991/resource/raw/master/static/blog/image-20210124112156219.png","https://gitee.com/yingle1991/resource/raw/master/static/blog/image-20210124113207329.png","https://gitee.com/yingle1991/resource/raw/master/static/blog/image-20210124114110871.png","https://gitee.com/yingle1991/resource/raw/master/static/blog/image-20210124115742768.png","https://gitee.com/yingle1991/resource/raw/master/static/blog/passme.png"],"content":"<p>序</p>\n<p>随着小程序的普及，大部分开发者都会有租个阿里服务器为小程序提供接口，恰巧我也正在开发一个股票、新债的小程序，但小程序一般都有两个需求（外网访问、https访问）,接口必须上云，所以才有今天的学习记录~</p>\n<p>一、在你的linux系统中安装docker</p>\n<p><code>curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</code></p>\n<p>剩下的就让机器自己运行就好了</p>\n<a id=\"more\"></a> \n\n<p>二、使用idea创建springboot项目，并打成jar包</p>\n<p><img src=\"https://gitee.com/yingle1991/resource/raw/master/static/blog/image-20210124111314359.png\" alt=\"image-20210124111314359\"></p>\n<p>这个大家都懂，就不再详细做介绍了</p>\n<!-- more--> \n\n<p>三、服务器 新建一个docker 文件夹存储打包文件 并写一个Dockerfile文件，并命名为：Dockerfile，文件内容如下：</p>\n<p><code>mkdir -p /usr/local/docker/stock</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 基础镜像使用java</span><br><span class=\"line\">FROM openjdk:8-jdk-alpine</span><br><span class=\"line\"># VOLUME 指定了临时文件目录为&#x2F;tmp。</span><br><span class=\"line\"># 其效果是在主机 &#x2F;var&#x2F;lib&#x2F;docker 目录下创建了一个临时文件，并链接到容器的&#x2F;tmp</span><br><span class=\"line\">VOLUME &#x2F;tmp</span><br><span class=\"line\"># 将jar包添加到容器中并更名为app.jar</span><br><span class=\"line\">ADD stock-0.0.1-SNAPSHOT.jar app.jar</span><br><span class=\"line\">#RUN bash -c &#39;touch &#x2F;app.jar&#39;</span><br><span class=\"line\"># 运行jar</span><br><span class=\"line\">ENV JAVA_OPTS&#x3D;&quot;&quot;</span><br><span class=\"line\">ENTRYPOINT [ &quot;sh&quot;, &quot;-c&quot;, &quot;java $JAVA_OPTS -Djava.security.egd&#x3D;file:&#x2F;dev&#x2F;.&#x2F;urandom -jar -Duser.timezone&#x3D;GMT+08 &#x2F;app.jar&quot; ]</span><br></pre></td></tr></table></figure>\n\n<p>四、把Dockerfile文件和springboot项目打成的jar包，放入linux中的同一目录，在此目录下执行</p>\n<!--特别注意最后的 .-->\n\n<p><code>docker build -t $&#123;你要打成镜像的名称&#125; .</code></p>\n<p><code>例：docker build -t wx-stock .</code></p>\n<p>五、上述命令执行完毕之后，使用docker images命令，会看到有两个镜像，openjdk:8-jdk-alpine，wx-stock</p>\n<p><img src=\"https://gitee.com/yingle1991/resource/raw/master/static/blog/image-20210124112156219.png\" alt=\"image-20210124112156219\"></p>\n<p>至此已经将服务镜像安装完毕，接下来安装nginx镜像发布接口</p>\n<p>六、下载nginx镜像，执行命令，坐等完成，我服务器宽带比较小，坐等的时间比较长。。。</p>\n<p><code>docker pull nginx:latest</code>  </p>\n<p>七、创建容器：</p>\n<ol>\n<li><p>先创建文件夹：</p>\n<p><code>mkdir -p /data/nginx/conf.d/</code></p>\n</li>\n<li><p>,然后执行下述命令创建容器：</p>\n<p><code>docker run -d -p 80:80 -v /data/nginx/conf.d/:/etc/nginx/conf.d/ --name nginx_mirror nginx</code></p>\n<p><code>docker run -d -p 8080:8080 --name wx-stock_mirror wx-stock</code></p>\n</li>\n</ol>\n<p>容器创建完成之后，执行<code>docker ps</code>， 会发现两个运行着的容器</p>\n<p><img src=\"https://gitee.com/yingle1991/resource/raw/master/static/blog/image-20210124113207329.png\" alt=\"image-20210124113207329\"></p>\n<p>中间还有点插曲，后面补充—-！<!--docker logs nginx_mirror--></p>\n<p>八、配置nginx,并设置域名</p>\n<ol>\n<li>购买域名</li>\n</ol>\n<p>阿里云或者腾讯云买一个域名，并实名认证 <u>现在很方便直接上传身份证照片即可备案，不像原来还邮寄幕布，拍照上传</u>，等待审核通过，等待DNS解析正常。</p>\n<ol start=\"2\">\n<li>配置DNS解析</li>\n</ol>\n<p>我在阿里云购买的域名，所以以阿里云做案例,进入阿里云域名解析，点击解析设置，点击解析设置中的新手引导，直接添加你的记录值，注意此记录值为你安装nginx服务器的外网ip，添加完成即可</p>\n<p><img src=\"https://gitee.com/yingle1991/resource/raw/master/static/blog/image-20210124114110871.png\" alt=\"image-20210124114110871\"></p>\n<p>九、配置nginx</p>\n<p>在/data/nginx/conf.d/文件夹中创建以  .conf 结尾的配置文件，文件内容如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream wx-stock &#123;</span><br><span class=\"line\">                           ip_hash;</span><br><span class=\"line\">                           server 服务器外网IP地址:jar服务端口号;</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">                        listen     80;</span><br><span class=\"line\">                        server_name 申请的域名 例 www.baidu.com;</span><br><span class=\"line\"></span><br><span class=\"line\">                        location &#x2F; &#123;</span><br><span class=\"line\">                                proxy_set_header REMOTE-HOST $remote_addr;</span><br><span class=\"line\">                                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">                                proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">                                proxy_set_header Host $host;</span><br><span class=\"line\">                                proxy_connect_timeout 3;</span><br><span class=\"line\">                                proxy_send_timeout 30;</span><br><span class=\"line\">                                proxy_read_timeout 30;</span><br><span class=\"line\">                                index  index.html index.htm;</span><br><span class=\"line\">                                proxy_pass http:&#x2F;&#x2F;wx-stock; &#x2F;&#x2F;必须与upstream 名称一致</span><br><span class=\"line\">                                rewrite ^&#x2F;(.*)&#x2F;$ &#x2F;$1 last;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>十、配置完成nginx之后，需要重启nginx_mirror容器</p>\n<p><code>docker restart nginx_mirror</code></p>\n<p>按常理学习部署到此其实已经结束，已经满足我开发调试，但是访问我的域名显示404，到这就介绍一下插曲吧：</p>\n<ol>\n<li>查看防火墙状态</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@yingle conf.d]# systemctl status firewalld.service</span><br><span class=\"line\">● firewalld.service - firewalld - dynamic firewall daemon</span><br><span class=\"line\">   Loaded: loaded (&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;firewalld.service; disabled; vendor preset: enabled)</span><br><span class=\"line\">   Active: inactive (dead)</span><br><span class=\"line\">     Docs: man:firewalld(1)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@yingle conf.d]#  firewall-cmd --state</span><br><span class=\"line\">not running</span><br></pre></td></tr></table></figure>\n\n<p>排除了防火墙问题</p>\n<ol start=\"2\">\n<li><p>查看设置阿里云安全策略</p>\n<p><img src=\"https://gitee.com/yingle1991/resource/raw/master/static/blog/image-20210124115742768.png\" alt=\"image-20210124115742768\"></p>\n</li>\n</ol>\n<p>按理说这两个设置完就都完事了，怎么还是404？我急了</p>\n<ol start=\"3\">\n<li><p>过分自信，还是查看一下日志吧</p>\n<p><code>docker logs nginx_mirror</code></p>\n<p>原来.conf文件错写了一个字母。。。</p>\n</li>\n</ol>\n<p>看来服务器有问题还是得先看日志，不能盲目自信</p>\n<p>——————————————————————————————————分割线</p>\n<p>https访问  待更</p>\n<p>分享程序员的理财、生活！我是乐子，多多指教！</p>\n<p> <img src=\"https://gitee.com/yingle1991/resource/raw/master/static/blog/passme.png\" alt=\"关注我得到更多信息\"></p>\n","more":"<p>二、使用idea创建springboot项目，并打成jar包</p>\n<p><img src=\"https://gitee.com/yingle1991/resource/raw/master/static/blog/image-20210124111314359.png\" alt=\"image-20210124111314359\"></p>\n<p>这个大家都懂，就不再详细做介绍了</p>\n<!-- more--> \n\n<p>三、服务器 新建一个docker 文件夹存储打包文件 并写一个Dockerfile文件，并命名为：Dockerfile，文件内容如下：</p>\n<p><code>mkdir -p /usr/local/docker/stock</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 基础镜像使用java</span><br><span class=\"line\">FROM openjdk:8-jdk-alpine</span><br><span class=\"line\"># VOLUME 指定了临时文件目录为&#x2F;tmp。</span><br><span class=\"line\"># 其效果是在主机 &#x2F;var&#x2F;lib&#x2F;docker 目录下创建了一个临时文件，并链接到容器的&#x2F;tmp</span><br><span class=\"line\">VOLUME &#x2F;tmp</span><br><span class=\"line\"># 将jar包添加到容器中并更名为app.jar</span><br><span class=\"line\">ADD stock-0.0.1-SNAPSHOT.jar app.jar</span><br><span class=\"line\">#RUN bash -c &#39;touch &#x2F;app.jar&#39;</span><br><span class=\"line\"># 运行jar</span><br><span class=\"line\">ENV JAVA_OPTS&#x3D;&quot;&quot;</span><br><span class=\"line\">ENTRYPOINT [ &quot;sh&quot;, &quot;-c&quot;, &quot;java $JAVA_OPTS -Djava.security.egd&#x3D;file:&#x2F;dev&#x2F;.&#x2F;urandom -jar -Duser.timezone&#x3D;GMT+08 &#x2F;app.jar&quot; ]</span><br></pre></td></tr></table></figure>\n\n<p>四、把Dockerfile文件和springboot项目打成的jar包，放入linux中的同一目录，在此目录下执行</p>\n<!--特别注意最后的 .-->\n\n<p><code>docker build -t $&#123;你要打成镜像的名称&#125; .</code></p>\n<p><code>例：docker build -t wx-stock .</code></p>\n<p>五、上述命令执行完毕之后，使用docker images命令，会看到有两个镜像，openjdk:8-jdk-alpine，wx-stock</p>\n<p><img src=\"https://gitee.com/yingle1991/resource/raw/master/static/blog/image-20210124112156219.png\" alt=\"image-20210124112156219\"></p>\n<p>至此已经将服务镜像安装完毕，接下来安装nginx镜像发布接口</p>\n<p>六、下载nginx镜像，执行命令，坐等完成，我服务器宽带比较小，坐等的时间比较长。。。</p>\n<p><code>docker pull nginx:latest</code>  </p>\n<p>七、创建容器：</p>\n<ol>\n<li><p>先创建文件夹：</p>\n<p><code>mkdir -p /data/nginx/conf.d/</code></p>\n</li>\n<li><p>,然后执行下述命令创建容器：</p>\n<p><code>docker run -d -p 80:80 -v /data/nginx/conf.d/:/etc/nginx/conf.d/ --name nginx_mirror nginx</code></p>\n<p><code>docker run -d -p 8080:8080 --name wx-stock_mirror wx-stock</code></p>\n</li>\n</ol>\n<p>容器创建完成之后，执行<code>docker ps</code>， 会发现两个运行着的容器</p>\n<p><img src=\"https://gitee.com/yingle1991/resource/raw/master/static/blog/image-20210124113207329.png\" alt=\"image-20210124113207329\"></p>\n<p>中间还有点插曲，后面补充—-！<!--docker logs nginx_mirror--></p>\n<p>八、配置nginx,并设置域名</p>\n<ol>\n<li>购买域名</li>\n</ol>\n<p>阿里云或者腾讯云买一个域名，并实名认证 <u>现在很方便直接上传身份证照片即可备案，不像原来还邮寄幕布，拍照上传</u>，等待审核通过，等待DNS解析正常。</p>\n<ol start=\"2\">\n<li>配置DNS解析</li>\n</ol>\n<p>我在阿里云购买的域名，所以以阿里云做案例,进入阿里云域名解析，点击解析设置，点击解析设置中的新手引导，直接添加你的记录值，注意此记录值为你安装nginx服务器的外网ip，添加完成即可</p>\n<p><img src=\"https://gitee.com/yingle1991/resource/raw/master/static/blog/image-20210124114110871.png\" alt=\"image-20210124114110871\"></p>\n<p>九、配置nginx</p>\n<p>在/data/nginx/conf.d/文件夹中创建以  .conf 结尾的配置文件，文件内容如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream wx-stock &#123;</span><br><span class=\"line\">                           ip_hash;</span><br><span class=\"line\">                           server 服务器外网IP地址:jar服务端口号;</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">                        listen     80;</span><br><span class=\"line\">                        server_name 申请的域名 例 www.baidu.com;</span><br><span class=\"line\"></span><br><span class=\"line\">                        location &#x2F; &#123;</span><br><span class=\"line\">                                proxy_set_header REMOTE-HOST $remote_addr;</span><br><span class=\"line\">                                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">                                proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">                                proxy_set_header Host $host;</span><br><span class=\"line\">                                proxy_connect_timeout 3;</span><br><span class=\"line\">                                proxy_send_timeout 30;</span><br><span class=\"line\">                                proxy_read_timeout 30;</span><br><span class=\"line\">                                index  index.html index.htm;</span><br><span class=\"line\">                                proxy_pass http:&#x2F;&#x2F;wx-stock; &#x2F;&#x2F;必须与upstream 名称一致</span><br><span class=\"line\">                                rewrite ^&#x2F;(.*)&#x2F;$ &#x2F;$1 last;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>十、配置完成nginx之后，需要重启nginx_mirror容器</p>\n<p><code>docker restart nginx_mirror</code></p>\n<p>按常理学习部署到此其实已经结束，已经满足我开发调试，但是访问我的域名显示404，到这就介绍一下插曲吧：</p>\n<ol>\n<li>查看防火墙状态</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@yingle conf.d]# systemctl status firewalld.service</span><br><span class=\"line\">● firewalld.service - firewalld - dynamic firewall daemon</span><br><span class=\"line\">   Loaded: loaded (&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;firewalld.service; disabled; vendor preset: enabled)</span><br><span class=\"line\">   Active: inactive (dead)</span><br><span class=\"line\">     Docs: man:firewalld(1)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@yingle conf.d]#  firewall-cmd --state</span><br><span class=\"line\">not running</span><br></pre></td></tr></table></figure>\n\n<p>排除了防火墙问题</p>\n<ol start=\"2\">\n<li><p>查看设置阿里云安全策略</p>\n<p><img src=\"https://gitee.com/yingle1991/resource/raw/master/static/blog/image-20210124115742768.png\" alt=\"image-20210124115742768\"></p>\n</li>\n</ol>\n<p>按理说这两个设置完就都完事了，怎么还是404？我急了</p>\n<ol start=\"3\">\n<li><p>过分自信，还是查看一下日志吧</p>\n<p><code>docker logs nginx_mirror</code></p>\n<p>原来.conf文件错写了一个字母。。。</p>\n</li>\n</ol>\n<p>看来服务器有问题还是得先看日志，不能盲目自信</p>\n<p>——————————————————————————————————分割线</p>\n<p>https访问  待更</p>\n<p>分享程序员的理财、生活！我是乐子，多多指教！</p>\n<p> <img src=\"https://gitee.com/yingle1991/resource/raw/master/static/blog/passme.png\" alt=\"关注我得到更多信息\"></p>","categories":[],"tags":[{"name":"理财","path":"api/tags/理财.json"},{"name":"技术","path":"api/tags/技术.json"},{"name":"运维","path":"api/tags/运维.json"}]}